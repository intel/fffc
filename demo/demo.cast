{"version": 2, "width": 238, "height": 55, "timestamp": 1589251291, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}}
[0.189828, "o", "\u001b]0;geremy@geremy-NUC8i7HVK: /tmp/demo\u0007\u001b[01;32mgeremy@geremy-NUC8i7HVK\u001b[00m:\u001b[01;34m/tmp/demo\u001b[00m$ "]
[0.76306, "o", "l"]
[0.859076, "o", "s"]
[1.090822, "o", "\r\n"]
[1.091856, "o", "demo.c  demo.h  demo_test.c\r\n"]
[1.092325, "o", "\u001b]0;geremy@geremy-NUC8i7HVK: /tmp/demo\u0007\u001b[01;32mgeremy@geremy-NUC8i7HVK\u001b[00m:\u001b[01;34m/tmp/demo\u001b[00m$ "]
[1.851112, "o", "c"]
[1.971111, "o", "a"]
[2.1069, "o", "t"]
[2.203102, "o", " "]
[2.378943, "o", "d"]
[2.531112, "o", "e"]
[2.627092, "o", "m"]
[2.714862, "o", "o"]
[3.043083, "o", "."]
[3.235112, "o", "c"]
[3.571115, "o", "\r\n"]
[3.57181, "o", "#include \"demo.h\"\r\n\r\nFraction add(Fraction f, float m) {\r\n\tf.numerator += (m * f.denominator);\r\n\treturn f;\r\n}\r\n\r\nFraction subtract(Fraction f, float m) {\r\n\tf.numerator -= (m * f.denominator);\r\n\treturn f;\r\n}\r\n\r\nFraction multiply(Fraction f, float m) {\r\n\tf.numerator *= (m * f.denominator);\r\n\treturn f;\r\n}\r\n\r\nFraction divide(Fraction f, float m) {\r\n\tf.numerator /= (m * f.denominator);\r\n\treturn f;\r\n}\r\n\r\nFraction reciprocal(Fraction f) {\r\n\tfloat tmp = f.numerator;\r\n\tf.numerator = f.denominator;\r\n\tf.denominator = tmp;\r\n\treturn f;\r\n}\r\n\r\nfloat concretize(Fraction f) {\r\n\treturn f.numerator / f.denominator;\r\n}\r\n\r\n\r\n"]
[3.572133, "o", "\u001b]0;geremy@geremy-NUC8i7HVK: /tmp/demo\u0007\u001b[01;32mgeremy@geremy-NUC8i7HVK\u001b[00m:\u001b[01;34m/tmp/demo\u001b[00m$ "]
[5.81116, "o", "c"]
[5.96309, "o", "a"]
[6.146989, "o", "t"]
[6.235053, "o", " "]
[6.45096, "o", "d"]
[6.611048, "o", "e"]
[6.675046, "o", "m"]
[6.763113, "o", "o"]
[6.971185, "o", "."]
[7.226988, "o", "h"]
[7.603012, "o", "\r\n"]
[7.603677, "o", "struct fraction {\r\n\tfloat numerator;\r\n\tfloat denominator;\r\n};\r\n\r\ntypedef struct fraction Fraction;\r\n\r\nFraction add(Fraction f, float m);\r\nFraction subtract(Fraction f, float m);\r\nFraction multiply(Fraction f, float m);\r\nFraction divide(Fraction f, float m);\r\nFraction reciprocal(Fraction f);\r\n\r\nfloat concretize(Fraction f);\r\n\r\n\r\n\r\n"]
[7.603961, "o", "\u001b]0;geremy@geremy-NUC8i7HVK: /tmp/demo\u0007\u001b[01;32mgeremy@geremy-NUC8i7HVK\u001b[00m:\u001b[01;34m/tmp/demo\u001b[00m$ "]
[10.819056, "o", "c"]
[10.938935, "o", "a"]
[11.074882, "o", "t"]
[11.155046, "o", " "]
[11.971021, "o", "d"]
[12.106962, "o", "e"]
[12.195099, "o", "m"]
[12.267071, "o", "o"]
[12.651201, "o", "-"]
[12.666635, "o", "t"]
[12.819051, "o", "e"]
[12.842956, "o", "s"]
[13.219117, "o", "\b\u001b[K"]
[13.363112, "o", "\b\u001b[K"]
[13.49096, "o", "\b\u001b[K"]
[13.674907, "o", "\b\u001b[K"]
[14.123041, "o", "_"]
[14.258961, "o", "t"]
[14.362942, "o", "e"]
[14.427027, "o", "s"]
[14.539077, "o", "t"]
[14.76321, "o", "."]
[14.907092, "o", "c"]
[15.435026, "o", "\r\n"]
[15.435688, "o", "#include <assert.h>\r\n#include <math.h>\r\n\r\n#include \"demo.h\"\r\n\r\nfloat TEST_NUMERATORS[] = {0.0, 1000000.0, -10000.0};\r\nfloat TEST_DENOMINATORS[] = {2.0, -2.0, 1000000000000.0, 7};\r\n\r\nint almost_equal(float a, float b) {\r\n\treturn fabs(a-b) < 0.001;\r\n}\r\n\r\nint main() {\r\n\tint num_test_numerators = sizeof(TEST_NUMERATORS)/sizeof(TEST_NUMERATORS[0]);\r\n\tint num_test_denominators = sizeof(TEST_DENOMINATORS)/sizeof(TEST_DENOMINATORS[0]);\r\n\tfor (int i=0; i < num_test_numerators; i++) {\r\n\t\tfor (int j=0; j < num_test_denominators; j++) {\r\n\t\t\tfloat num = TEST_NUMERATORS[i];\r\n\t\t\tfloat den = TEST_DENOMINATORS[j];\r\n\t\t\tFraction f = {num, den};\r\n\t\t\tf = divide(f, 1.0);\r\n\t\t\tf = multiply(f, 1.0);\r\n\t\t\tassert(almost_equal(f.numerator, num));\r\n\t\t\tassert(almost_equal(f.denominator, den));\r\n\t\t\tf = subtract(f, 0.0);\r\n\t\t\tf = add(f, 0.0);\r\n\t\t\tassert(almost_equal(f.numerator, num));\r\n\t\t\tassert(almost_equal(f.denominator, den));\r\n\t\t\tf = reciprocal(f);\r\n\t\t\tassert(almost_equal(f.denominator, num));\r\n\t\t\tassert(almost_equal(f.numerator, den));\r"]
[15.435768, "o", "\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n"]
[15.436008, "o", "\u001b]0;geremy@geremy-NUC8i7HVK: /tmp/demo\u0007\u001b[01;32mgeremy@geremy-NUC8i7HVK\u001b[00m:\u001b[01;34m/tmp/demo\u001b[00m$ "]
[18.347297, "o", "gcc -fsanitize=address -fprofile-arcs -g -Og demo.c demo_test.c -o test"]
[19.875026, "o", "\r\n"]
[19.957878, "o", "\u001b]0;geremy@geremy-NUC8i7HVK: /tmp/demo\u0007\u001b[01;32mgeremy@geremy-NUC8i7HVK\u001b[00m:\u001b[01;34m/tmp/demo\u001b[00m$ "]
[22.466755, "o", "l"]
[22.55486, "o", "s"]
[22.690978, "o", "\r\n"]
[22.69183, "o", "demo.c  demo.h  demo_test.c  \u001b[0m\u001b[01;32mtest\u001b[0m\r\n"]
[22.692239, "o", "\u001b]0;geremy@geremy-NUC8i7HVK: /tmp/demo\u0007\u001b[01;32mgeremy@geremy-NUC8i7HVK\u001b[00m:\u001b[01;34m/tmp/demo\u001b[00m$ "]
[24.771054, "o", "g"]
[25.291022, "o", "\b\u001b[K"]
[25.683023, "o", "f"]
[25.850984, "o", "f"]
[26.003064, "o", "f"]
[26.194994, "o", "c"]
[26.331025, "o", " "]
[26.819064, "o", "t"]
[26.930867, "o", "e"]
[26.962777, "o", "s"]
[27.058807, "o", "t"]
[27.347038, "o", " "]
[28.09898, "o", "."]
[28.267131, "o", "/"]
[28.475099, "o", "d"]
[28.619074, "o", "e"]
[28.682908, "o", "m"]
[28.811105, "o", "o"]
[29.346855, "o", "_"]
[29.738961, "o", "\b\u001b[K"]
[30.394793, "o", "_"]
[30.547061, "o", "f"]
[30.85102, "o", "f"]
[31.066913, "o", "f"]
[31.394955, "o", "c"]
[31.970916, "o", "\r\n"]
[32.763752, "o", "Generating demo_fffc/test/concretize_runner.sh ...\r\n"]
[32.837532, "o", "Generating demo_fffc/test/reciprocal_runner.sh ...\r\n"]
[32.908317, "o", "Generating demo_fffc/test/divide_runner.sh ...\r\n"]
[32.974249, "o", "Generating demo_fffc/test/multiply_runner.sh ...\r\n"]
[33.04127, "o", "Generating demo_fffc/test/subtract_runner.sh ...\r\n"]
[33.110384, "o", "Generating demo_fffc/test/add_runner.sh ...\r\n"]
[33.179873, "o", "Generating demo_fffc/test/almost_equal_runner.sh ..."]
[33.180136, "o", "\r\n"]
[33.248379, "o", "\u001b]0;geremy@geremy-NUC8i7HVK: /tmp/demo\u0007\u001b[01;32mgeremy@geremy-NUC8i7HVK\u001b[00m:\u001b[01;34m/tmp/demo\u001b[00m$ "]
[40.355142, "o", "demo_fffc/test/multiply_runner.sh"]
[41.450973, "o", "\r\n"]
[41.454837, "o", "\u001b[32mUsing user-provided log level DEBUG\r\n\u001b[0m\u001b[32mUsing default resize rate; set via FFFC_RESIZE_RATE environment variable.\r\n\u001b[0m\u001b[32mUsing default mutation rate; set via FFFC_MUTATION_RATE environment variable.\r\n\u001b[0m\u001b[32mUsing default mutation count; set via FFFC_MUTATION_COUNT environment variable.\r\n\u001b[0m\u001b[32mUsing default generation count; set via FFFC_GENERATION_COUNT environment variable.\r\n\u001b[0m\u001b[32mUsing default crash path; set via FFFC_CRASH_PATH environment variable.\r\n\u001b[0m\u001b[32mUsing default working path; set via FFFC_DATA_PATH environment variable.\r\n\u001b[0m\u001b[32mUsing default state size; set via the FFFC_MAX_STATE_COUNT environment variable\r\n\u001b[0m\u001b[32mFuzzing normally; to replay a specific run, set the FFFC_DEBUG_REPLAY=<logfile> environment variable\r\n"]
[42.889365, "o", "\u001b[0m\u001b[32mExecutions per second: 2857\r\n"]
[44.477297, "o", "\u001b[0m\u001b[32mExecutions per second: 2579\r\n"]
[46.099573, "o", "\u001b[0m\u001b[32mExecutions per second: 2525\r\n"]
[47.716748, "o", "\u001b[0m\u001b[32mExecutions per second: 2533\r\n"]
[49.319034, "o", "\u001b[0m\u001b[32mExecutions per second: 2569\r\n"]
[49.914862, "o", "^C"]
[49.915941, "o", "\r\n"]
[49.916218, "o", "\u001b]0;geremy@geremy-NUC8i7HVK: /tmp/demo\u0007\u001b[01;32mgeremy@geremy-NUC8i7HVK\u001b[00m:\u001b[01;34m/tmp/demo\u001b[00m$ "]
[51.858947, "o", "l"]
[51.954992, "o", "s"]
[52.066792, "o", " "]
[52.562967, "o", "d"]
[52.738896, "o", "e"]
[52.818942, "o", "m"]
[52.898828, "o", "o"]
[53.618971, "o", "_"]
[53.746986, "o", "f"]
[53.989396, "o", "ffc/"]
[55.154921, "o", "\r\n"]
[55.155929, "o", "\u001b[0m\u001b[01;34mtest\u001b[0m\r\n"]
[55.156363, "o", "\u001b]0;geremy@geremy-NUC8i7HVK: /tmp/demo\u0007\u001b[01;32mgeremy@geremy-NUC8i7HVK\u001b[00m:\u001b[01;34m/tmp/demo\u001b[00m$ "]
[56.179088, "o", "ls demo_fffc/"]
[56.714986, "o", "t"]
[56.834739, "o", "e"]
[56.850693, "o", "s"]
[56.939035, "o", "t"]
[57.338863, "o", "\r\n"]
[57.339886, "o", "0x105f_demo_test.h          add.c           \u001b[0m\u001b[01;32madd.so\u001b[0m                   \u001b[01;32malmost_equal_runner.sh\u001b[0m  concretize_debug.gdb   divide.c           \u001b[01;32mdivide.so\u001b[0m       fffc_runtime.h      \u001b[01;32mmultiply_rebuild.sh\u001b[0m   \u001b[01;32mreciprocal_debug.sh\u001b[0m    subtract_debug.gdb\r\n0x105f_demo_test_mutator.c  add_debug.gdb   almost_equal.c           \u001b[01;32malmost_equal.so\u001b[0m         \u001b[01;32mconcretize_debug.sh\u001b[0m    divide_debug.gdb   do_nothing.c    fffc_runtime.o      \u001b[01;32mmultiply_runner.sh\u001b[0m    reciprocal.o           \u001b[01;32msubtract_debug.sh\u001b[0m\r\n0x105f_demo_test_mutator.o  \u001b[01;32madd_debug.sh\u001b[0m    almost_equal_debug.gdb   base.h                  concretize.o           \u001b[01;32mdivide_debug.sh\u001b[0m    do_nothing.o    multiply.c          \u001b[01;32mmultiply.so\u001b[0m           \u001b[01;32mreciprocal_rebuild.sh\u001b[0m  subtract.o\r\n"]
[57.340015, "o", "0xdf8_demo.h                add.o           \u001b[01;32malmost_equal_debug.sh\u001b[0m    base_mutator.c          \u001b[01;32mconcretize_rebuild.sh\u001b[0m  divide.o           \u001b[01;32menv_adjuster\u001b[0m    multiply_debug.gdb  mutator.h             \u001b[01;32mreciprocal_runner.sh\u001b[0m   \u001b[01;32msubtract_rebuild.sh\u001b[0m\r\n0xdf8_demo_mutator.c        \u001b[01;32madd_rebuild.sh\u001b[0m  almost_equal.o           base_mutator.o          \u001b[01;32mconcretize_runner.sh\u001b[0m   \u001b[01;32mdivide_rebuild.sh\u001b[0m  env_adjuster.c  \u001b[01;32mmultiply_debug.sh\u001b[0m   reciprocal.c          \u001b[01;32mreciprocal.so\u001b[0m          \u001b[01;32msubtract_runner.sh\u001b[0m\r\n0xdf8_demo_mutator.o        \u001b[01;32madd_runner.sh\u001b[0m   \u001b[01;32malmost_equal_rebuild.sh\u001b[0m  concretize.c            \u001b[01;32mconcretize.so\u001b[0m          \u001b[01;32mdivide_runner.sh\u001b[0m   fffc_runtime.c  multiply.o          reciprocal_debug.gdb  subtract.c             \u001b[01;32msubtract.so\u001b[0m\r\n"]
[57.34034, "o", "\u001b]0;geremy@geremy-NUC8i7HVK: /tmp/demo\u0007\u001b[01;32mgeremy@geremy-NUC8i7HVK\u001b[00m:\u001b[01;34m/tmp/demo\u001b[00m$ "]
[59.66688, "o", "c"]
[59.80306, "o", "a"]
[59.92281, "o", "t"]
[60.018987, "o", " "]
[60.202982, "o", "d"]
[60.346913, "o", "e"]
[60.43492, "o", "m"]
[60.49082, "o", "o"]
[60.866893, "o", "_"]
[61.082973, "o", "f"]
[61.234833, "o", "f"]
[61.346806, "o", "f"]
[61.555028, "o", "c"]
[61.938986, "o", "/"]
[62.354832, "o", "t"]
[62.466814, "o", "e"]
[62.514789, "o", "s"]
[62.610908, "o", "t"]
[62.922995, "o", "/"]
[63.68295, "o", "0"]
[63.818964, "o", "x"]
[64.699143, "o", "1"]
[64.866864, "o", "0"]
[66.122877, "o", "5"]
[68.050686, "o", "f"]
[68.514989, "o", "_"]
[68.749268, "o", "\u0007demo_test"]
[69.682964, "o", "."]
[70.354905, "o", "h"]
[70.834822, "o", "\r\n"]
[70.835401, "o", "struct fraction\r\n{\r\n  float numerator;\r\n  float denominator;\r\n};\r\n\r\ntypedef struct fraction Fraction;\r\n\r\nint main();\r\n\r\nint almost_equal(float a, float b);\r\n\r\nvoid divide();\r\n\r\nvoid multiply();\r\n\r\nvoid subtract();\r\n\r\nvoid add();\r\n\r\nvoid reciprocal();\r\n\r\nvoid __assert_fail();\r\n\r\n"]
[70.83564, "o", "\u001b]0;geremy@geremy-NUC8i7HVK: /tmp/demo\u0007\u001b[01;32mgeremy@geremy-NUC8i7HVK\u001b[00m:\u001b[01;34m/tmp/demo\u001b[00m$ "]
[72.706981, "o", "l"]
[72.826966, "o", "s"]
[72.922999, "o", " "]
[73.138963, "o", "d"]
[73.298959, "o", "e"]
[73.362752, "o", "m"]
[73.45094, "o", "o"]
[73.890917, "o", "_"]
[74.194907, "o", "f"]
[74.362912, "o", "f"]
[74.506997, "o", "f"]
[74.986903, "o", "\b\u001b[K"]
[75.487207, "o", "\b\u001b[K"]
[75.516974, "o", "\b\u001b[K"]
[75.547741, "o", "\b\u001b[K"]
[75.578295, "o", "\b\u001b[K"]
[75.607898, "o", "\b\u001b[K"]
[75.638237, "o", "\b\u001b[K"]
[75.66862, "o", "\b\u001b[K"]
[75.697899, "o", "\b\u001b[K"]
[75.728373, "o", "\b\u001b[K"]
[75.758174, "o", "\b\u001b[K"]
[75.788091, "o", "\u0007"]
[75.818529, "o", "\u0007"]
[75.848118, "o", "\u0007"]
[75.877963, "o", "\u0007"]
[75.954933, "o", "c"]
[76.074729, "o", "a"]
[76.202972, "o", "t"]
[76.306821, "o", " "]
[76.490785, "o", "d"]
[76.658976, "o", "e"]
[76.698614, "o", "m"]
[76.794767, "o", "o"]
[77.114967, "o", "_"]
[77.202995, "o", "f"]
[77.354971, "o", "f"]
[77.474986, "o", "f"]
[77.666942, "o", "c"]
[78.130853, "o", "/"]
[78.362703, "o", "t"]
[78.498827, "o", "e"]
[78.538677, "o", "s"]
[78.626729, "o", "t"]
[79.074786, "o", "/"]
[80.210941, "o", "0"]
[80.322946, "o", "x"]
[80.778921, "o", "d"]
[80.970857, "o", "f"]
[81.394643, "o", "8"]
[81.637206, "o", "\u0007"]
[81.637375, "o", "_demo"]
[82.874734, "o", "_"]
[83.602777, "o", "\b\u001b[K"]
[83.850946, "o", "."]
[84.082832, "o", "h"]
[84.229357, "o", " "]
[84.915259, "o", "\r\n"]
[84.915871, "o", "struct fraction\r\n{\r\n  float numerator;\r\n  float denominator;\r\n};\r\n\r\ntypedef struct fraction Fraction;\r\n\r\nfloat concretize(Fraction f);\r\n\r\nFraction reciprocal(Fraction f);\r\n\r\nFraction divide(Fraction f, float m);\r\n\r\nFraction multiply(Fraction f, float m);\r\n\r\nFraction subtract(Fraction f, float m);\r\n\r\nFraction add(Fraction f, float m);\r\n\r\n"]
[84.916132, "o", "\u001b]0;geremy@geremy-NUC8i7HVK: /tmp/demo\u0007\u001b[01;32mgeremy@geremy-NUC8i7HVK\u001b[00m:\u001b[01;34m/tmp/demo\u001b[00m$ "]
[90.578948, "o", "exit\r\n"]
